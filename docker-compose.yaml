version: '3.12'

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_DB: ${POSTGRES_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 1s
      timeout: 5s
      retries: 15
    ports:
      - "5432:${POSTGRES_PORT}"
    volumes:
      - backend-data:/var/lib/postgresql/data

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ".env"
    restart: always
    depends_on:
      - postgres
      - ollama
      - chroma

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    env_file:
      - ".env"
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama
    tty: true
    restart: always
    entrypoint: sh -c "
      ollama serve &
      sleep 5;
      ollama pull $LANGGRAPH_EMBEDDING_MODEL;
      ollama pull $LANGGRAPH_LANGUAGE_MODEL;
      wait
      "

  chroma:
    image: chromadb/chroma:latest
    container_name: chroma
    restart: always
    ports:
      - "8000:${CHROMADB_PORT}"
    volumes:
      - chroma-data:/chroma/chroma
    env_file:
      - ".env"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=$CHROMADB_PORT
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
    depends_on:
      - prometheus

volumes:
  backend-data:
  ollama:
  chroma-data:
  prometheus-data:
  grafana-data:
